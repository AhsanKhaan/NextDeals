/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    'newsletter-subscribers': NewsletterSubscriber;
    'price-history': PriceHistory;
    products: Product;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    'newsletter-subscribers': NewsletterSubscribersSelect<false> | NewsletterSubscribersSelect<true>;
    'price-history': PriceHistorySelect<false> | PriceHistorySelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  role: 'admin' | 'editor' | 'user';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    feature?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name: string;
  /**
   * URL-friendly version of the name
   */
  slug: string;
  description?: string | null;
  /**
   * Brief description for cards
   */
  shortDescription?: string | null;
  icon?:
    | (
        | 'smartphone'
        | 'laptop'
        | 'headphones'
        | 'camera'
        | 'home'
        | 'sofa'
        | 'kitchen'
        | 'garden'
        | 'shirt'
        | 'shoes'
        | 'watch'
        | 'bag'
        | 'heart'
        | 'sparkles'
        | 'dumbbell'
        | 'activity'
        | 'book'
        | 'music'
      )
    | null;
  color?: ('blue' | 'green' | 'purple' | 'pink' | 'orange' | 'indigo' | 'red' | 'yellow') | null;
  image?: (string | null) | Media;
  /**
   * Parent category for subcategories
   */
  parent?: (string | null) | Category;
  /**
   * Category depth level (0 = root, 1 = subcategory, etc.)
   */
  level?: number | null;
  isActive?: boolean | null;
  /**
   * Show in featured categories section
   */
  isFeatured?: boolean | null;
  /**
   * Automatically calculated
   */
  productCount?: number | null;
  /**
   * Number of subcategories
   */
  subcategoryCount?: number | null;
  /**
   * Display order (lower numbers first)
   */
  sortOrder?: number | null;
  seo?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  /**
   * Page view count for analytics
   */
  viewCount?: number | null;
  /**
   * Last time this category was viewed
   */
  lastViewedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscribers".
 */
export interface NewsletterSubscriber {
  id: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean | null;
  preferences?: {
    /**
     * Categories user is interested in
     */
    categories?: (string | Category)[] | null;
    frequency?: ('daily' | 'weekly' | 'monthly') | null;
  };
  source?: ('website' | 'social' | 'referral' | 'ad') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "price-history".
 */
export interface PriceHistory {
  id: string;
  product: string | Product;
  price: number;
  source?: ('manual' | 'api' | 'csv' | 'scheduled') | null;
  /**
   * Price change from previous entry
   */
  priceChange?: number | null;
  /**
   * Percentage change from previous entry
   */
  priceChangePercentage?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  /**
   * Product name/title
   */
  title: string;
  /**
   * URL-friendly version of the title
   */
  slug: string;
  /**
   * Full product description
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Brief description for cards and previews
   */
  shortDescription?: string | null;
  category: string | Category;
  brand?: string | null;
  model?: string | null;
  /**
   * Stock Keeping Unit
   */
  sku?: string | null;
  pricing: {
    originalPrice: number;
    currentPrice: number;
    /**
     * Automatically calculated
     */
    discountPercentage?: number | null;
  };
  rating?: number | null;
  reviewCount?: number | null;
  images?:
    | {
        image: string | Media;
        alt: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Affiliate link to the product
   */
  affiliateUrl: string;
  merchant: 'amazon' | 'ebay' | 'bestbuy' | 'target' | 'walmart' | 'other';
  features?:
    | {
        name: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  status?: {
    /**
     * Show on homepage featured section
     */
    isFeatured?: boolean | null;
    /**
     * Show in trending section
     */
    isTrending?: boolean | null;
    /**
     * Product is active and visible
     */
    isActive?: boolean | null;
  };
  seo?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  analytics?: {
    viewCount?: number | null;
    clickCount?: number | null;
    conversionRate?: number | null;
    lastViewedAt?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'newsletter-subscribers';
        value: string | NewsletterSubscriber;
      } | null)
    | ({
        relationTo: 'price-history';
        value: string | PriceHistory;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        feature?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  shortDescription?: T;
  icon?: T;
  color?: T;
  image?: T;
  parent?: T;
  level?: T;
  isActive?: T;
  isFeatured?: T;
  productCount?: T;
  subcategoryCount?: T;
  sortOrder?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  viewCount?: T;
  lastViewedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscribers_select".
 */
export interface NewsletterSubscribersSelect<T extends boolean = true> {
  email?: T;
  firstName?: T;
  lastName?: T;
  isActive?: T;
  preferences?:
    | T
    | {
        categories?: T;
        frequency?: T;
      };
  source?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "price-history_select".
 */
export interface PriceHistorySelect<T extends boolean = true> {
  product?: T;
  price?: T;
  source?: T;
  priceChange?: T;
  priceChangePercentage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  shortDescription?: T;
  category?: T;
  brand?: T;
  model?: T;
  sku?: T;
  pricing?:
    | T
    | {
        originalPrice?: T;
        currentPrice?: T;
        discountPercentage?: T;
      };
  rating?: T;
  reviewCount?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  affiliateUrl?: T;
  merchant?: T;
  features?:
    | T
    | {
        name?: T;
        value?: T;
        id?: T;
      };
  status?:
    | T
    | {
        isFeatured?: T;
        isTrending?: T;
        isActive?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  analytics?:
    | T
    | {
        viewCount?: T;
        clickCount?: T;
        conversionRate?: T;
        lastViewedAt?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}